{"version":3,"file":"ionic-image-loader.js","sources":["ng:/ionic-image-loader/lib/services/image-loader-config.service.ts","ng:/ionic-image-loader/lib/services/image-loader.service.ts","ng:/ionic-image-loader/lib/ionic-image-loader.component.ts","ng:/ionic-image-loader/lib/ionic-image-loader.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ImageLoaderConfigService {\n  debugMode = false;\n\n  spinnerEnabled = true;\n\n  fallbackAsPlaceholder = false;\n\n  backgroundSize = 'contain';\n\n  backgroundRepeat = 'no-repeat';\n\n  display = 'block';\n\n  width = '100%';\n\n  height = '100%';\n\n  useImg = false;\n\n  fallbackUrl;\n\n  concurrency = 5;\n\n  maxCacheSize = -1;\n\n  maxCacheAge = -1;\n\n  imageReturnType: 'base64' | 'uri' = 'uri';\n\n  spinnerName;\n\n  spinnerColor;\n\n  httpHeaders: HttpHeaders;\n\n  // Must be default 'true' for the new WebView to show images\n  fileNameCachedWithExtension = true;\n\n  fallbackFileNameCachedExtension = '.jpg';\n\n  cacheDirectoryType: 'cache' | 'data' | 'external' = 'cache';\n\n  private _cacheDirectoryName = 'image-loader-cache';\n\n\n  get cacheDirectoryName() {\n    return this._cacheDirectoryName;\n  }\n\n  set cacheDirectoryName(name) {\n    name.replace(/\\W/g, '');\n    this._cacheDirectoryName = name;\n  }\n\n  /**\n   * Enables debug mode to receive console logs, errors, warnings\n   */\n  enableDebugMode() {\n    this.debugMode = true;\n  }\n\n  /**\n   * Enable/Disable the spinner by default. Defaults to true.\n   * @param enable set to true to enable\n   */\n  enableSpinner(enable: boolean) {\n    this.spinnerEnabled = enable;\n  }\n\n  /**\n   * Enable/Disable the fallback image as placeholder instead of the spinner. Defaults to false.\n   * @param enable set to true to enable\n   */\n  enableFallbackAsPlaceholder(enable: boolean) {\n    this.fallbackAsPlaceholder = enable;\n  }\n\n  /**\n   * Sets the cache directory name. Defaults to 'image-loader-cache'\n   * @param name name of directory\n   */\n  setCacheDirectoryName(name: string) {\n    this.cacheDirectoryName = name;\n  }\n\n  /**\n   * Set default height for images that are not using <img> tag\n   * @param height height\n   */\n  setHeight(height: string) {\n    this.height = height;\n  }\n\n  /**\n   * Set default width for images that are not using <img> tag\n   * @param width Width\n   */\n  setWidth(width: string) {\n    this.width = width;\n  }\n\n  /**\n   * Enable display mode for images that are not using <img> tag\n   * @param display Display mode\n   */\n  setDisplay(display: string) {\n    this.display = display;\n  }\n\n  /**\n   * Use <img> tag by default\n   * @param use set to true to use <img> tag by default\n   */\n  useImageTag(use: boolean) {\n    this.useImg = use;\n  }\n\n  /**\n   * Set default background size for images that are not using <img> tag\n   * @param backgroundSize Background size\n   */\n  setBackgroundSize(backgroundSize: string) {\n    this.backgroundSize = backgroundSize;\n  }\n\n  /**\n   * Set background repeat for images that are not using <img> tag\n   * @param backgroundRepeat Background repeat\n   */\n  setBackgroundRepeat(backgroundRepeat: string) {\n    this.backgroundRepeat = backgroundRepeat;\n  }\n\n  /**\n   * Set fallback URL to use when image src is undefined or did not resolve.\n   * This image will not be cached. This should ideally be a locally saved image.\n   * @param fallbackUrl The remote or local URL of the image\n   */\n  setFallbackUrl(fallbackUrl: string) {\n    this.fallbackUrl = fallbackUrl;\n  }\n\n  /**\n   * Set the maximum number of allowed connections at the same time.\n   * @param concurrency\n   */\n  setConcurrency(concurrency: number) {\n    this.concurrency = concurrency;\n  }\n\n  /**\n   * Sets the maximum allowed cache size\n   * @param cacheSize Cache size in bytes\n   */\n  setMaximumCacheSize(cacheSize: number) {\n    this.maxCacheSize = cacheSize;\n  }\n\n  /**\n   * Sets the maximum allowed cache age\n   * @param cacheAge Maximum cache age in milliseconds\n   */\n  setMaximumCacheAge(cacheAge: number) {\n    this.maxCacheAge = cacheAge;\n  }\n\n  /**\n   * Set the return type of cached images\n   * @param imageReturnType The return type; either 'base64' or 'uri'\n   */\n  setImageReturnType(imageReturnType: 'base64' | 'uri') {\n    this.imageReturnType = imageReturnType;\n  }\n\n  /**\n   * Set the default spinner name\n   * @param name\n   */\n  setSpinnerName(name: string) {\n    this.spinnerName = name;\n  }\n\n  /**\n   * Set the default spinner color\n   * @param color\n   */\n  setSpinnerColor(color: string) {\n    this.spinnerColor = color;\n  }\n\n  /**\n   * Set headers options for the HttpClient transfers.\n   * @param headers\n   */\n  setHttpHeaders(headers: HttpHeaders) {\n    this.httpHeaders = headers;\n  }\n\n  /**\n   * Set options for the FileTransfer plugin\n   * @param options\n   * @deprecated FileTransfer plugin removed.\n   */\n  setFileTransferOptions(options: {\n    trustAllHosts: boolean;\n    [key: string]: any;\n  }) {\n    // do nothing, plugin deprecated.\n  }\n\n  /**\n   * Enable/Disable the save filename of cached images with extension.  Defaults to false.\n   * @param enable set to true to enable\n   */\n  setFileNameCachedWithExtension(enable: boolean) {\n    this.fileNameCachedWithExtension = enable;\n  }\n\n  /**\n   * Set fallback extension filename of cached images.  Defaults to '.jpg'.\n   * @param extension fallback extension (e.x .jpg)\n   */\n  setFallbackFileNameCachedExtension(extension: string) {\n    this.fallbackFileNameCachedExtension = extension;\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { File, FileEntry } from '@ionic-native/file/ngx';\nimport { WebView } from '@ionic-native/ionic-webview/ngx';\nimport { Platform } from '@ionic/angular';\nimport { fromEvent, Subject } from 'rxjs';\nimport { filter, first, take } from 'rxjs/operators';\nimport { ImageLoaderConfigService } from './image-loader-config.service';\n\ninterface IndexItem {\n  name: string;\n  modificationTime: Date;\n  size: number;\n}\n\ninterface QueueItem {\n  imageUrl: string;\n  resolve: Function;\n  reject: Function;\n}\n\ndeclare const Ionic: any;\n\nconst EXTENSIONS = ['jpg', 'png', 'jpeg', 'gif', 'svg', 'tiff'];\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ImageLoaderService {\n\n  /**\n   * Indicates if the cache service is ready.\n   * When the cache service isn't ready, images are loaded via browser instead.\n   */\n  private isCacheReady = false;\n  /**\n   * Indicates if this service is initialized.\n   * This service is initialized once all the setup is done.\n   */\n  private isInit = false;\n  private initPromiseResolve: Function;\n  private initPromise = new Promise<void>(resolve => this.initPromiseResolve = resolve);\n  private lockSubject = new Subject<boolean>();\n  private lock$ = this.lockSubject.asObservable();\n  /**\n   * Number of concurrent requests allowed\n   */\n  private concurrency = 5;\n  /**\n   * Queue items\n   */\n  private queue: QueueItem[] = [];\n  private processing = 0;\n  /**\n   * Fast accessible Object for currently processing items\n   */\n  private currentlyProcessing: { [index: string]: Promise<any> } = {};\n  private cacheIndex: IndexItem[] = [];\n  private currentCacheSize = 0;\n  private indexed = false;\n  private lockedCallsQueue: Function[] = [];\n\n  constructor(\n    private config: ImageLoaderConfigService,\n    private file: File,\n    private http: HttpClient,\n    private platform: Platform,\n    private webview: WebView,\n  ) {\n    if (!platform.is('cordova')) {\n      // we are running on a browser, or using livereload\n      // plugin will not function in this case\n      this.isInit = true;\n      this.throwWarning(\n        'You are running on a browser or using livereload, IonicImageLoader will not function, falling back to browser loading.',\n      );\n      this.initPromiseResolve();\n    } else {\n      fromEvent(document, 'deviceready')\n        .pipe(first())\n        .subscribe(res => {\n          if (this.nativeAvailable) {\n            this.initCache();\n          } else {\n            // we are running on a browser, or using livereload\n            // plugin will not function in this case\n            this.isInit = true;\n            this.initPromiseResolve();\n            this.throwWarning(\n              'You are running on a browser or using livereload, IonicImageLoader will not function, falling back to browser loading.',\n            );\n          }\n        });\n    }\n  }\n\n  get nativeAvailable(): boolean {\n    return File.installed();\n  }\n\n  private get isCacheSpaceExceeded(): boolean {\n    return (\n      this.config.maxCacheSize > -1 &&\n      this.currentCacheSize > this.config.maxCacheSize\n    );\n  }\n\n  private get isWKWebView(): boolean {\n    return (\n      this.platform.is('ios') &&\n      (<any>window).webkit &&\n      (<any>window).webkit.messageHandlers\n    );\n  }\n\n  private get isIonicWKWebView(): boolean {\n    return (\n      //  Important: isWKWebview && isIonicWKWebview must be mutually excluse.\n      //  Otherwise the logic for copying to tmp under IOS will fail.\n      (this.platform.is('android') && this.webview) ||\n      (this.platform.is('android')) && (location.host === 'localhost:8080') ||\n      (<any>window).LiveReload);\n  }\n\n  private get isDevServer(): boolean {\n    return window['IonicDevServer'] !== undefined;\n  }\n\n  /**\n   * Check if we can process more items in the queue\n   */\n  private get canProcess(): boolean {\n    return this.queue.length > 0 && this.processing < this.concurrency;\n  }\n\n  ready(): Promise<void> {\n    return this.initPromise;\n  }\n\n  /**\n   * Preload an image\n   * @param imageUrl Image URL\n   * @returns returns a promise that resolves with the cached image URL\n   */\n  preload(imageUrl: string): Promise<string> {\n    return this.getImagePath(imageUrl);\n  }\n\n  getFileCacheDirectory() {\n    if (this.config.cacheDirectoryType === 'data') {\n      return this.file.dataDirectory;\n    } else if (this.config.cacheDirectoryType === 'external') {\n      return this.platform.is('android') ? this.file.externalDataDirectory : this.file.documentsDirectory;\n    }\n    return this.file.cacheDirectory;\n  }\n\n  /**\n   * Clears cache of a single image\n   * @param imageUrl Image URL\n   */\n  async clearImageCache(imageUrl: string) {\n    if (!this.platform.is('cordova')) {\n      return;\n    }\n\n    await this.ready();\n\n    this.runLocked(async () => {\n      const fileName = this.createFileName(imageUrl);\n      const route = this.getFileCacheDirectory() + this.config.cacheDirectoryName;\n      // pause any operations\n      this.isInit = false;\n\n      try {\n        await this.file.removeFile(route, fileName);\n\n        if (this.isWKWebView && !this.isIonicWKWebView) {\n          await this.file.removeFile(this.file.tempDirectory + this.config.cacheDirectoryName, fileName);\n        }\n      } catch (err) {\n        this.throwError(err);\n      }\n\n      return this.initCache(true);\n    });\n  }\n\n  /**\n   * Clears the cache\n   */\n  async clearCache() {\n    if (!this.platform.is('cordova')) {\n      return;\n    }\n\n    await this.ready();\n\n    this.runLocked(async () => {\n      try {\n        await this.file.removeRecursively(this.getFileCacheDirectory(), this.config.cacheDirectoryName);\n\n        if (this.isWKWebView && !this.isIonicWKWebView) {\n          // also clear the temp files\n          try {\n            this.file.removeRecursively(this.file.tempDirectory, this.config.cacheDirectoryName);\n          } catch (err) {\n            // Noop catch. Removing the tempDirectory might fail,\n            // as it is not persistent.\n          }\n        }\n      } catch (err) {\n        this.throwError(err);\n      }\n\n      return this.initCache(true);\n    });\n  }\n\n  /**\n   * Gets the filesystem path of an image.\n   * This will return the remote path if anything goes wrong or if the cache service isn't ready yet.\n   * @param imageUrl The remote URL of the image\n   * @returns Returns a promise that will always resolve with an image URL\n   */\n  async getImagePath(imageUrl: string): Promise<string> {\n    if (typeof imageUrl !== 'string' || imageUrl.length <= 0) {\n      throw new Error('The image url provided was empty or invalid.');\n    }\n\n    await this.ready();\n\n    if (!this.isCacheReady) {\n      this.throwWarning('The cache system is not running. Images will be loaded by your browser instead.');\n      return imageUrl;\n    }\n\n    if (this.isImageUrlRelative(imageUrl)) {\n      return imageUrl;\n    }\n\n    try {\n      return await this.getCachedImagePath(imageUrl);\n    } catch (err) {\n      // image doesn't exist in cache, lets fetch it and save it\n      return this.addItemToQueue(imageUrl);\n    }\n  }\n\n  private async processLockedQueue() {\n    if (await this.getLockedState()) {\n      return;\n    }\n\n    if (this.lockedCallsQueue.length > 0) {\n      await this.setLockedState(true);\n\n      try {\n        await this.lockedCallsQueue.slice(0, 1)[0]();\n      } catch (err) {\n        console.log('Error running locked function: ', err);\n      }\n\n      await this.setLockedState(false);\n      return this.processLockedQueue();\n    }\n  }\n\n  private getLockedState(): Promise<boolean> {\n    return this.lock$\n      .pipe(take(1))\n      .toPromise();\n  }\n\n  private awaitUnlocked(): Promise<boolean> {\n    return this.lock$\n      .pipe(\n        filter(locked => !!locked),\n        take(1),\n      )\n      .toPromise();\n  }\n\n  private async setLockedState(locked: boolean) {\n    this.lockSubject.next(locked);\n  }\n\n  private runLocked(fn: Function) {\n    this.lockedCallsQueue.push(fn);\n    this.processLockedQueue();\n  }\n\n  /**\n   * Returns if an imageUrl is an relative path\n   * @param imageUrl\n   */\n  private isImageUrlRelative(imageUrl: string) {\n    return !/^(https?|file):\\/\\/\\/?/i.test(imageUrl);\n  }\n\n  /**\n   * Add an item to the queue\n   * @param imageUrl\n   * @param resolve\n   * @param reject\n   */\n  private addItemToQueue(imageUrl: string, resolve?, reject?): void | Promise<any> {\n    let p: void | Promise<any>;\n\n    if (!resolve && !reject) {\n      p = new Promise<any>((res, rej) => {\n        resolve = res;\n        reject = rej;\n      });\n    } else {\n      resolve = resolve || (() => {\n      });\n      reject = reject || (() => {\n      });\n    }\n\n    this.queue.push({\n      imageUrl,\n      resolve,\n      reject,\n    });\n\n    this.processQueue();\n\n    return p;\n  }\n\n  /**\n   * Processes one item from the queue\n   */\n  private async processQueue() {\n    // make sure we can process items first\n    if (!this.canProcess) {\n      return;\n    }\n\n    // increase the processing number\n    this.processing++;\n\n    // take the first item from queue\n    const currentItem: QueueItem = this.queue.splice(0, 1)[0];\n\n    // function to call when done processing this item\n    // this will reduce the processing number\n    // then will execute this function again to process any remaining items\n    const done = () => {\n      this.processing--;\n      this.processQueue();\n\n      // only delete if it's the last/unique occurrence in the queue\n      if (this.currentlyProcessing[currentItem.imageUrl] !== undefined && !this.currentlyInQueue(currentItem.imageUrl)) {\n        delete this.currentlyProcessing[currentItem.imageUrl];\n      }\n    };\n\n    const error = (e) => {\n      currentItem.reject();\n      this.throwError(e);\n      done();\n    };\n\n    if (this.currentlyProcessing[currentItem.imageUrl] !== undefined) {\n      try {\n        // Prevented same Image from loading at the same time\n        await this.currentlyProcessing[currentItem.imageUrl];\n        const localUrl = await this.getCachedImagePath(currentItem.imageUrl);\n        currentItem.resolve(localUrl);\n        done();\n      } catch (err) {\n        error(err);\n      }\n      return;\n    }\n\n    this.currentlyProcessing[currentItem.imageUrl] = (async () => {\n      // process more items concurrently if we can\n      if (this.canProcess) {\n        this.processQueue();\n      }\n\n      const localDir = this.getFileCacheDirectory() + this.config.cacheDirectoryName + '/';\n      const fileName = this.createFileName(currentItem.imageUrl);\n\n      try {\n        const data: Blob = await this.http.get(currentItem.imageUrl, {\n          responseType: 'blob',\n          headers: this.config.httpHeaders,\n        }).toPromise();\n\n        const file = await this.file.writeFile(localDir, fileName, data, {replace: true}) as FileEntry;\n\n        if (this.isCacheSpaceExceeded) {\n          this.maintainCacheSize();\n        }\n\n        await this.addFileToIndex(file);\n        const localUrl = await this.getCachedImagePath(currentItem.imageUrl);\n        currentItem.resolve(localUrl);\n        done();\n        this.maintainCacheSize();\n      } catch (err) {\n        error(err);\n        throw err;\n      }\n    })();\n\n  }\n\n  /**\n   * Search if the url is currently in the queue\n   * @param imageUrl Image url to search\n   */\n  private currentlyInQueue(imageUrl: string) {\n    return this.queue.some(item => item.imageUrl === imageUrl);\n  }\n\n  /**\n   * Initialize the cache service\n   * @param [replace] Whether to replace the cache directory if it already exists\n   */\n  private async initCache(replace?: boolean) {\n    this.concurrency = this.config.concurrency;\n\n    // create cache directories if they do not exist\n    try {\n      await this.createCacheDirectory(replace);\n      await this.indexCache();\n      this.isCacheReady = true;\n    } catch (err) {\n      this.throwError(err);\n    }\n\n    this.isInit = true;\n    this.initPromiseResolve();\n  }\n\n  /**\n   * Adds a file to index.\n   * Also deletes any files if they are older than the set maximum cache age.\n   * @param file FileEntry to index\n   */\n  private async addFileToIndex(file: FileEntry): Promise<any> {\n    const metadata = await new Promise<any>((resolve, reject) => file.getMetadata(resolve, reject));\n\n    if (\n      this.config.maxCacheAge > -1 &&\n      Date.now() - metadata.modificationTime.getTime() >\n      this.config.maxCacheAge\n    ) {\n      // file age exceeds maximum cache age\n      return this.removeFile(file.name);\n    } else {\n      // file age doesn't exceed maximum cache age, or maximum cache age isn't set\n      this.currentCacheSize += metadata.size;\n\n      // add item to index\n      this.cacheIndex.push({\n        name: file.name,\n        modificationTime: metadata.modificationTime,\n        size: metadata.size,\n      });\n    }\n  }\n\n  /**\n   * Indexes the cache if necessary\n   */\n  private async indexCache(): Promise<void> {\n    this.cacheIndex = [];\n\n    try {\n      const files = await this.file.listDir(this.getFileCacheDirectory(), this.config.cacheDirectoryName);\n      await Promise.all(files.map(this.addFileToIndex.bind(this)));\n      // Sort items by date. Most recent to oldest.\n      this.cacheIndex = this.cacheIndex.sort(\n        (a: IndexItem, b: IndexItem): number => (a > b ? -1 : a < b ? 1 : 0),\n      );\n      this.indexed = true;\n    } catch (err) {\n      this.throwError(err);\n    }\n  }\n\n  /**\n   * This method runs every time a new file is added.\n   * It checks the cache size and ensures that it doesn't exceed the maximum cache size set in the config.\n   * If the limit is reached, it will delete old images to create free space.\n   */\n  private async maintainCacheSize() {\n    if (this.config.maxCacheSize > -1 && this.indexed) {\n      const maintain = async () => {\n        if (this.currentCacheSize > this.config.maxCacheSize) {\n          // grab the first item in index since it's the oldest one\n          const file: IndexItem = this.cacheIndex.splice(0, 1)[0];\n\n          if (typeof file === 'undefined') {\n            return maintain();\n          }\n\n          // delete the file then process next file if necessary\n          try {\n            await this.removeFile(file.name);\n          } catch (err) {\n            // ignore errors, nothing we can do about it\n          }\n\n          this.currentCacheSize -= file.size;\n          return maintain();\n        }\n      };\n\n      return maintain();\n    }\n  }\n\n  /**\n   * Remove a file\n   * @param file The name of the file to remove\n   */\n  private async removeFile(file: string): Promise<any> {\n    await this.file.removeFile(this.getFileCacheDirectory() + this.config.cacheDirectoryName, file);\n\n    if (this.isWKWebView && !this.isIonicWKWebView) {\n      try {\n        return this.file.removeFile(this.file.tempDirectory + this.config.cacheDirectoryName, file);\n      } catch (err) {\n        // Noop catch. Removing the files from tempDirectory might fail, as it is not persistent.\n      }\n    }\n  }\n\n  /**\n   * Get the local path of a previously cached image if exists\n   * @param url The remote URL of the image\n   * @returns Returns a promise that resolves with the local path if exists, or rejects if doesn't exist\n   */\n  private async getCachedImagePath(url: string): Promise<string> {\n    await this.ready();\n\n    if (!this.isCacheReady) {\n      throw new Error('Cache is not ready');\n    }\n\n    // if we're running with livereload, ignore cache and call the resource from it's URL\n    if (this.isDevServer) {\n      return url;\n    }\n\n    // get file name\n    const fileName = this.createFileName(url);\n\n    // get full path\n    const dirPath = this.getFileCacheDirectory() + this.config.cacheDirectoryName,\n      tempDirPath = this.file.tempDirectory + this.config.cacheDirectoryName;\n\n    try {\n      // check if exists\n      const fileEntry = await this.file.resolveLocalFilesystemUrl(dirPath + '/' + fileName) as FileEntry;\n\n      // file exists in cache\n      if (this.config.imageReturnType === 'base64') {\n        // read the file as data url and return the base64 string.\n        // should always be successful as the existence of the file\n        // is already ensured\n        const base64: string = await this.file.readAsDataURL(dirPath, fileName);\n        return base64.replace('data:null', 'data:*/*');\n      } else if (this.config.imageReturnType !== 'uri') {\n        return;\n      }\n\n      // now check if iOS device & using WKWebView Engine.\n      // in this case only the tempDirectory is accessible,\n      // therefore the file needs to be copied into that directory first!\n      if (this.isIonicWKWebView) {\n        return this.normalizeUrl(fileEntry);\n      }\n\n      if (!this.isWKWebView) {\n        // return native path\n        return fileEntry.nativeURL;\n      }\n\n      // check if file already exists in temp directory\n      try {\n        const tempFileEntry = await this.file.resolveLocalFilesystemUrl(tempDirPath + '/' + fileName) as FileEntry;\n        // file exists in temp directory\n        // return native path\n        return this.normalizeUrl(tempFileEntry);\n      } catch (err) {\n        // file does not yet exist in the temp directory.\n        // copy it!\n        const tempFileEntry = await this.file\n          .copyFile(dirPath, fileName, tempDirPath, fileName) as FileEntry;\n\n        // now the file exists in the temp directory\n        // return native path\n        return this.normalizeUrl(tempFileEntry);\n      }\n    } catch (err) {\n      throw new Error('File does not exist');\n    }\n  }\n\n  /**\n   * Normalizes the image uri to a version that can be loaded in the webview\n   * @param fileEntry the FileEntry of the image file\n   * @returns the normalized Url\n   */\n\n  private normalizeUrl(fileEntry: FileEntry): string {\n    // Use Ionic normalizeUrl to generate the right URL for Ionic WKWebView\n    if (Ionic && typeof Ionic.normalizeURL === 'function') {\n      return Ionic.normalizeURL(fileEntry.nativeURL);\n    }\n    // use new webview function to do the trick\n    if (this.webview) {\n      return this.webview.convertFileSrc(fileEntry.nativeURL);\n    }\n    return fileEntry.nativeURL;\n  }\n\n  /**\n   * Throws a console error if debug mode is enabled\n   * @param args Error message\n   */\n  private throwError(...args: any[]) {\n    if (this.config.debugMode) {\n      args.unshift('ImageLoader Error: ');\n      console.error.apply(console, args);\n    }\n  }\n\n  /**\n   * Throws a console warning if debug mode is enabled\n   * @param args Error message\n   */\n  private throwWarning(...args: any[]) {\n    if (this.config.debugMode) {\n      args.unshift('ImageLoader Warning: ');\n      console.warn.apply(console, args);\n    }\n  }\n\n  /**\n   * Check if the cache directory exists\n   * @param directory The directory to check. Either this.file.tempDirectory or this.getFileCacheDirectory()\n   * @returns Returns a promise that resolves if exists, and rejects if it doesn't\n   */\n  private cacheDirectoryExists(directory: string): Promise<boolean> {\n    return this.file.checkDir(directory, this.config.cacheDirectoryName);\n  }\n\n  /**\n   * Create the cache directories\n   * @param replace override directory if exists\n   * @returns Returns a promise that resolves if the directories were created, and rejects on error\n   */\n  private createCacheDirectory(replace: boolean = false): Promise<any> {\n    let cacheDirectoryPromise: Promise<any>, tempDirectoryPromise: Promise<any>;\n\n    if (replace) {\n      // create or replace the cache directory\n      cacheDirectoryPromise = this.file.createDir(this.getFileCacheDirectory(), this.config.cacheDirectoryName, replace);\n    } else {\n      // check if the cache directory exists.\n      // if it does not exist create it!\n      cacheDirectoryPromise = this.cacheDirectoryExists(this.getFileCacheDirectory())\n        .catch(() => this.file.createDir(this.getFileCacheDirectory(), this.config.cacheDirectoryName, false));\n    }\n\n    if (this.isWKWebView && !this.isIonicWKWebView) {\n      if (replace) {\n        // create or replace the temp directory\n        tempDirectoryPromise = this.file.createDir(\n          this.file.tempDirectory,\n          this.config.cacheDirectoryName,\n          replace,\n        );\n      } else {\n        // check if the temp directory exists.\n        // if it does not exist create it!\n        tempDirectoryPromise = this.cacheDirectoryExists(\n          this.file.tempDirectory,\n        ).catch(() =>\n          this.file.createDir(\n            this.file.tempDirectory,\n            this.config.cacheDirectoryName,\n            false,\n          ),\n        );\n      }\n    } else {\n      tempDirectoryPromise = Promise.resolve();\n    }\n\n    return Promise.all([cacheDirectoryPromise, tempDirectoryPromise]);\n  }\n\n  /**\n   * Creates a unique file name out of the URL\n   * @param url URL of the file\n   * @returns Unique file name\n   */\n  private createFileName(url: string): string {\n    // hash the url to get a unique file name\n    return (\n      this.hashString(url).toString() +\n      (this.config.fileNameCachedWithExtension\n        ? this.getExtensionFromUrl(url)\n        : '')\n    );\n  }\n\n  /**\n   * Converts a string to a unique 32-bit int\n   * @param string string to hash\n   * @returns 32-bit int\n   */\n  private hashString(string: string): number {\n    let hash = 0,\n      char;\n    if (string.length === 0) {\n      return hash;\n    }\n    for (let i = 0; i < string.length; i++) {\n      char = string.charCodeAt(i);\n      // tslint:disable-next-line\n      hash = (hash << 5) - hash + char;\n      // tslint:disable-next-line\n      hash = hash & hash;\n    }\n    return hash;\n  }\n\n  /**\n   * Extract extension from filename or url\n   *\n   * @param url\n   * @returns\n   *\n   * Not always will url's contain a valid image extention. We'll check if any valid extention is supplied.\n   * If not, we will use the default.\n   */\n  private getExtensionFromUrl(url: string): string {\n    const urlWitoutParams = url.split(/\\#|\\?/)[0];\n    const ext: string = (urlWitoutParams.substr((~-urlWitoutParams.lastIndexOf('.') >>> 0) + 1) || '').toLowerCase();\n\n    return (\n      EXTENSIONS.indexOf(ext) >= 0 ? ext : this.config.fallbackFileNameCachedExtension\n    );\n  }\n}\n","import { Component, ElementRef, EventEmitter, Input, OnInit, Output, Renderer2 } from '@angular/core';\nimport { ImageLoaderConfigService } from './services/image-loader-config.service';\nimport { ImageLoaderService } from './services/image-loader.service';\n\nconst propMap: any = {\n  display: 'display',\n  height: 'height',\n  width: 'width',\n  backgroundSize: 'background-size',\n  backgroundRepeat: 'background-repeat',\n};\n\nexport interface ImageAttribute {\n  element: string;\n  value: string;\n}\n\n@Component({\n  selector: 'img-loader',\n  template: `\n    <ion-spinner\n        *ngIf=\"spinner && isLoading && !fallbackAsPlaceholder\"\n        [name]=\"spinnerName\"\n        [color]=\"spinnerColor\"\n    ></ion-spinner>\n    <ng-content></ng-content>\n  `,\n  styles: [\n    'ion-spinner { float: none; margin-left: auto; margin-right: auto; display: block; }',\n  ],\n})\nexport class IonicImageLoaderComponent implements OnInit {\n  /**\n   * Fallback URL to load when the image url fails to load or does not exist.\n   */\n  @Input() fallbackUrl: string = this.config.fallbackUrl;\n  /**\n   * Whether to show a spinner while the image loads\n   */\n  @Input() spinner: boolean = this.config.spinnerEnabled;\n  /**\n   * Whether to show the fallback image instead of a spinner while the image loads\n   */\n\n  @Input() fallbackAsPlaceholder: boolean = this.config.fallbackAsPlaceholder;\n  /**\n   * Attributes to pass through to img tag if _useImg == true\n   */\n  @Input() imgAttributes: ImageAttribute[] = [];\n  /**\n   * Enable/Disable caching\n   */\n  @Input() cache = true;\n  /**\n   * Width of the image. This will be ignored if using useImg.\n   */\n  @Input() width: string = this.config.width;\n  /**\n   * Height of the image. This will be ignored if using useImg.\n   */\n  @Input() height: string = this.config.height;\n  /**\n   * Display type of the image. This will be ignored if using useImg.\n   */\n  @Input() display: string = this.config.display;\n  /**\n   * Background size. This will be ignored if using useImg.\n   */\n  @Input() backgroundSize: string = this.config.backgroundSize;\n  /**\n   * Background repeat. This will be ignored if using useImg.\n   */\n  @Input() backgroundRepeat: string = this.config.backgroundRepeat;\n  /**\n   * Name of the spinner\n   */\n  @Input() spinnerName: string = this.config.spinnerName;\n  /**\n   * Color of the spinner\n   */\n  @Input() spinnerColor: string = this.config.spinnerColor;\n  /**\n   * Notify on image load..\n   */\n  @Output()\n  load: EventEmitter<IonicImageLoaderComponent> = new EventEmitter<IonicImageLoaderComponent>();\n  /**\n   * Indicates if the image is still loading\n   */\n  isLoading = true;\n  element: HTMLElement;\n\n  constructor(\n    private _element: ElementRef,\n    private renderer: Renderer2,\n    private imageLoader: ImageLoaderService,\n    private config: ImageLoaderConfigService,\n  ) {\n  }\n\n  private _useImg: boolean = this.config.useImg;\n\n  /**\n   * Use <img> tag\n   */\n  @Input()\n  set useImg(val: boolean) {\n    this._useImg = val !== false;\n  }\n\n  /**\n   * Convenience attribute to disable caching\n   */\n  @Input()\n  set noCache(val: boolean) {\n    this.cache = val !== false;\n  }\n\n  private _src: string;\n\n  get src(): string {\n    return this._src;\n  }\n\n  /**\n   * The URL of the image to load.\n   */\n  @Input()\n  set src(imageUrl: string) {\n    this._src = this.processImageUrl(imageUrl);\n    this.updateImage(this._src);\n  }\n\n  ngOnInit(): void {\n    if (this.fallbackAsPlaceholder && this.fallbackUrl) {\n      this.setImage(this.fallbackUrl, false);\n    }\n\n    if (!this.src) {\n      // image url was not passed\n      // this can happen when [src] is set to a variable that turned out to be undefined\n      // one example could be a list of users with their profile pictures\n      // in this case, it would be useful to use the fallback image instead\n      // if fallbackUrl was used as placeholder we do not need to set it again\n      if (!this.fallbackAsPlaceholder && this.fallbackUrl) {\n        // we're not going to cache the fallback image since it should be locally saved\n        this.setImage(this.fallbackUrl);\n      } else {\n        this.isLoading = false;\n      }\n    }\n  }\n\n  private updateImage(imageUrl: string) {\n    this.imageLoader\n      .getImagePath(imageUrl)\n      .then((url: string) => this.setImage(url))\n      .catch((error: any) => this.setImage(this.fallbackUrl || imageUrl));\n  }\n\n  /**\n   * Gets the image URL to be loaded and disables caching if necessary\n   */\n  private processImageUrl(imageUrl: string): string {\n    if (this.cache === false) {\n      // need to disable caching\n\n      if (imageUrl.indexOf('?') < 0) {\n        // add ? if doesn't exists\n        imageUrl += '?';\n      } else {\n        imageUrl += '&';\n      }\n      // append timestamp at the end to make URL unique\n      imageUrl += 'cache_buster=' + Date.now();\n    }\n\n    return imageUrl;\n  }\n\n  /**\n   * Set the image to be displayed\n   * @param imageUrl image src\n   * @param stopLoading set to true to mark the image as loaded\n   */\n  private setImage(imageUrl: string, stopLoading: boolean = true): void {\n    this.isLoading = !stopLoading;\n\n    if (this._useImg) {\n      // Using <img> tag\n      if (!this.element) {\n        // create img element if we dont have one\n        this.element = this.renderer.createElement('img');\n        this.renderer.appendChild(this._element.nativeElement, this.element);\n      }\n\n      // set it's src\n      this.renderer.setAttribute(this.element, 'src', imageUrl);\n\n      // if imgAttributes are defined, add them to our img element\n      this.imgAttributes.forEach((attribute) => {\n        this.renderer.setAttribute(this.element, attribute.element, attribute.value);\n      });\n      if (this.fallbackUrl && !this.imageLoader.nativeAvailable) {\n        this.renderer.listen(this.element, 'error', () =>\n          this.renderer.setAttribute(this.element, 'src', this.fallbackUrl),\n        );\n      }\n    } else {\n      // Not using <img> tag\n\n      this.element = this._element.nativeElement;\n\n      for (const prop in propMap) {\n        if (this[prop]) {\n          this.renderer.setStyle(this.element, propMap[prop], this[prop]);\n        }\n      }\n      this.renderer.setStyle(\n        this.element,\n        'background-image',\n        `url(\"${imageUrl || this.fallbackUrl}\")`,\n      );\n    }\n    if (stopLoading) {\n      this.load.emit(this);\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { File } from '@ionic-native/file/ngx';\nimport { IonicModule } from '@ionic/angular';\nimport { IonicImageLoaderComponent } from './ionic-image-loader.component';\n\nimport { ImageLoaderConfigService } from './services/image-loader-config.service';\nimport { ImageLoaderService } from './services/image-loader.service';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    HttpClientModule,\n    CommonModule,\n  ],\n  declarations: [IonicImageLoaderComponent],\n  exports: [IonicImageLoaderComponent],\n})\nexport class IonicImageLoader {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: IonicImageLoader,\n      providers: [\n        ImageLoaderConfigService,\n        ImageLoaderService,\n        File,\n      ],\n    };\n  }\n}\n"]}